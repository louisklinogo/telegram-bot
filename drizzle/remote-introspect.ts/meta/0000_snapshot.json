{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.clients": {
      "name": "clients",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "whatsapp": {
          "name": "whatsapp",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "referral_source": {
          "name": "referral_source",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_code": {
          "name": "country_code",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": false
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "occupation": {
          "name": "occupation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        }
      },
      "indexes": {
        "clients_team_id_idx": {
          "name": "clients_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_clients_deleted_at": {
          "name": "idx_clients_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_clients_email": {
          "name": "idx_clients_email",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(email IS NOT NULL)",
          "with": {}
        },
        "idx_clients_name": {
          "name": "idx_clients_name",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_clients_name_trgm": {
          "name": "idx_clients_name_trgm",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_clients_phone": {
          "name": "idx_clients_phone",
          "columns": [
            {
              "expression": "phone",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(phone IS NOT NULL)",
          "with": {}
        },
        "idx_clients_team_id": {
          "name": "idx_clients_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "idx_clients_whatsapp": {
          "name": "idx_clients_whatsapp",
          "columns": [
            {
              "expression": "whatsapp",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clients_team_id_fkey": {
          "name": "clients_team_id_fkey",
          "tableFrom": "clients",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "check_at_least_one_contact": {
          "name": "check_at_least_one_contact",
          "value": "(phone IS NOT NULL) OR (whatsapp IS NOT NULL) OR (email IS NOT NULL)"
        }
      },
      "policies": {
        "Allow all operations for service role": {
          "name": "Allow all operations for service role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "true"
        },
        "clients_select": {
          "name": "clients_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.orders": {
      "name": "orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "order_number": {
          "name": "order_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "order_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'generated'"
        },
        "total_price": {
          "name": "total_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "deposit_amount": {
          "name": "deposit_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "balance_amount": {
          "name": "balance_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "cancelled_at": {
          "name": "cancelled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_orders_active_status": {
          "name": "idx_orders_active_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "idx_orders_client_id": {
          "name": "idx_orders_client_id",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(client_id IS NOT NULL)",
          "with": {}
        },
        "idx_orders_created_at": {
          "name": "idx_orders_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_orders_deleted_at": {
          "name": "idx_orders_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_orders_due_date": {
          "name": "idx_orders_due_date",
          "columns": [
            {
              "expression": "due_date",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "((deleted_at IS NULL) AND (due_date IS NOT NULL))",
          "with": {}
        },
        "idx_orders_order_number": {
          "name": "idx_orders_order_number",
          "columns": [
            {
              "expression": "order_number",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_orders_status": {
          "name": "idx_orders_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_orders_team_id": {
          "name": "idx_orders_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "orders_team_id_idx": {
          "name": "orders_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "orders_client_id_fkey": {
          "name": "orders_client_id_fkey",
          "tableFrom": "orders",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["client_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "orders_team_id_fkey": {
          "name": "orders_team_id_fkey",
          "tableFrom": "orders",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "orders_order_number_key": {
          "columns": ["order_number"],
          "nullsNotDistinct": false,
          "name": "orders_order_number_key"
        }
      },
      "checkConstraints": {
        "check_deposit_not_exceeding_total": {
          "name": "check_deposit_not_exceeding_total",
          "value": "deposit_amount <= total_price"
        },
        "check_positive_amounts": {
          "name": "check_positive_amounts",
          "value": "(total_price >= (0)::numeric) AND (deposit_amount >= (0)::numeric) AND (balance_amount >= (0)::numeric)"
        },
        "check_valid_order_status": {
          "name": "check_valid_order_status",
          "value": "(status)::text = ANY (ARRAY[('generated'::character varying)::text, ('in_progress'::character varying)::text, ('completed'::character varying)::text, ('cancelled'::character varying)::text])"
        }
      },
      "policies": {
        "Allow all operations for service role": {
          "name": "Allow all operations for service role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "true"
        },
        "orders_select": {
          "name": "orders_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.measurements": {
      "name": "measurements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "record_name": {
          "name": "record_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "garment_type": {
          "name": "garment_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "measurements": {
          "name": "measurements",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "taken_at": {
          "name": "taken_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "measurement_group_id": {
          "name": "measurement_group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "previous_version_id": {
          "name": "previous_version_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"RAY\"}'"
        }
      },
      "indexes": {
        "idx_measurements_client_active": {
          "name": "idx_measurements_client_active",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "is_active",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_measurements_client_id": {
          "name": "idx_measurements_client_id",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_measurements_deleted_at": {
          "name": "idx_measurements_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_measurements_garment_type": {
          "name": "idx_measurements_garment_type",
          "columns": [
            {
              "expression": "garment_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(garment_type IS NOT NULL)",
          "with": {}
        },
        "idx_measurements_group_id": {
          "name": "idx_measurements_group_id",
          "columns": [
            {
              "expression": "measurement_group_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_measurements_tags": {
          "name": "idx_measurements_tags",
          "columns": [
            {
              "expression": "tags",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_measurements_taken_at": {
          "name": "idx_measurements_taken_at",
          "columns": [
            {
              "expression": "taken_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(taken_at IS NOT NULL)",
          "with": {}
        },
        "idx_measurements_team_id": {
          "name": "idx_measurements_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "measurements_team_id_idx": {
          "name": "measurements_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "measurements_client_id_fkey": {
          "name": "measurements_client_id_fkey",
          "tableFrom": "measurements",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["client_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "measurements_previous_version_id_measurements_id_fk": {
          "name": "measurements_previous_version_id_measurements_id_fk",
          "tableFrom": "measurements",
          "tableTo": "measurements",
          "schemaTo": "public",
          "columnsFrom": ["previous_version_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "measurements_team_id_fkey": {
          "name": "measurements_team_id_fkey",
          "tableFrom": "measurements",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "check_valid_garment_type": {
          "name": "check_valid_garment_type",
          "value": "((garment_type)::text = ANY ((ARRAY['suit'::character varying, 'kaftan'::character varying, 'shirt'::character varying, 'trouser'::character varying, 'agbada'::character varying, 'two_piece'::character varying])::text[])) OR (garment_type IS NULL)"
        }
      },
      "policies": {
        "Allow all operations for service role": {
          "name": "Allow all operations for service role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "true"
        },
        "measurements_select": {
          "name": "measurements_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.teams": {
      "name": "teams",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "base_currency": {
          "name": "base_currency",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'GHS'"
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'GH'"
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'Africa/Accra'"
        },
        "quiet_hours": {
          "name": "quiet_hours",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'21:00-08:00'"
        },
        "locale": {
          "name": "locale",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'en-GH'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.communication_accounts": {
      "name": "communication_accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'connected'"
        },
        "credentials_encrypted": {
          "name": "credentials_encrypted",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_comm_accounts_team": {
          "name": "idx_comm_accounts_team",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "uq_comm_accounts_team_provider_external": {
          "name": "uq_comm_accounts_team_provider_external",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "provider",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "external_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "communication_accounts_team_id_fkey": {
          "name": "communication_accounts_team_id_fkey",
          "tableFrom": "communication_accounts",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "comm_accounts_rw": {
          "name": "comm_accounts_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.communication_threads": {
      "name": "communication_threads",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "channel": {
          "name": "channel",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "external_contact_id": {
          "name": "external_contact_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'open'"
        },
        "assigned_user_id": {
          "name": "assigned_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "last_message_at": {
          "name": "last_message_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "whatsapp_contact_id": {
          "name": "whatsapp_contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "instagram_contact_id": {
          "name": "instagram_contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_comm_threads_pagination": {
          "name": "idx_comm_threads_pagination",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "last_message_at",
              "asc": false,
              "nulls": "first",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_comm_threads_status": {
          "name": "idx_comm_threads_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_comm_threads_team": {
          "name": "idx_comm_threads_team",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_comm_threads_team_status": {
          "name": "idx_comm_threads_team_status",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "uq_comm_threads_account_contact": {
          "name": "uq_comm_threads_account_contact",
          "columns": [
            {
              "expression": "account_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "external_contact_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "communication_threads_account_id_fkey": {
          "name": "communication_threads_account_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "communication_accounts",
          "schemaTo": "public",
          "columnsFrom": ["account_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "communication_threads_assigned_user_id_fkey": {
          "name": "communication_threads_assigned_user_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["assigned_user_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "communication_threads_customer_id_fkey": {
          "name": "communication_threads_customer_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["customer_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "communication_threads_instagram_contact_id_fkey": {
          "name": "communication_threads_instagram_contact_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "instagram_contacts",
          "schemaTo": "public",
          "columnsFrom": ["instagram_contact_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "communication_threads_team_id_fkey": {
          "name": "communication_threads_team_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "communication_threads_whatsapp_contact_id_fkey": {
          "name": "communication_threads_whatsapp_contact_id_fkey",
          "tableFrom": "communication_threads",
          "tableTo": "whatsapp_contacts",
          "schemaTo": "public",
          "columnsFrom": ["whatsapp_contact_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "comm_threads_rw": {
          "name": "comm_threads_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.communication_messages": {
      "name": "communication_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "thread_id": {
          "name": "thread_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider_message_id": {
          "name": "provider_message_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "direction": {
          "name": "direction",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "meta": {
          "name": "meta",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "sent_at": {
          "name": "sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "delivered_at": {
          "name": "delivered_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "read_at": {
          "name": "read_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_status": {
          "name": "is_status",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "status": {
          "name": "status",
          "type": "comm_message_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'sent'"
        },
        "client_message_id": {
          "name": "client_message_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_comm_messages_status": {
          "name": "idx_comm_messages_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_comm_messages_team": {
          "name": "idx_comm_messages_team",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_comm_messages_thread": {
          "name": "idx_comm_messages_thread",
          "columns": [
            {
              "expression": "thread_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "uq_comm_msg_team_client": {
          "name": "uq_comm_msg_team_client",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "client_message_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(client_message_id IS NOT NULL)",
          "with": {}
        },
        "uq_comm_msg_team_provider": {
          "name": "uq_comm_msg_team_provider",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "provider_message_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(provider_message_id IS NOT NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "communication_messages_team_id_fkey": {
          "name": "communication_messages_team_id_fkey",
          "tableFrom": "communication_messages",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "communication_messages_thread_id_fkey": {
          "name": "communication_messages_thread_id_fkey",
          "tableFrom": "communication_messages",
          "tableTo": "communication_threads",
          "schemaTo": "public",
          "columnsFrom": ["thread_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "comm_messages_rw": {
          "name": "comm_messages_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "current_team_id": {
          "name": "current_team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_current_team_id_fkey": {
          "name": "users_current_team_id_fkey",
          "tableFrom": "users",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["current_team_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Enable insert for users based on user_id": {
          "name": "Enable insert for users based on user_id",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"],
          "withCheck": "(( SELECT auth.uid() AS uid) = id)"
        },
        "users_select_self": {
          "name": "users_select_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        },
        "users_update_self": {
          "name": "users_update_self",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.transaction_allocations": {
      "name": "transaction_allocations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "transaction_allocations_invoice_idx": {
          "name": "transaction_allocations_invoice_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "transaction_allocations_invoice_id_fkey": {
          "name": "transaction_allocations_invoice_id_fkey",
          "tableFrom": "transaction_allocations",
          "tableTo": "invoices",
          "schemaTo": "public",
          "columnsFrom": ["invoice_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_allocations_transaction_id_fkey": {
          "name": "transaction_allocations_transaction_id_fkey",
          "tableFrom": "transaction_allocations",
          "tableTo": "transactions",
          "schemaTo": "public",
          "columnsFrom": ["transaction_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "transaction_allocations_transaction_id_invoice_id_key": {
          "columns": ["transaction_id", "invoice_id"],
          "nullsNotDistinct": false,
          "name": "transaction_allocations_transaction_id_invoice_id_key"
        }
      },
      "checkConstraints": {
        "transaction_allocations_amount_check": {
          "name": "transaction_allocations_amount_check",
          "value": "amount > (0)::numeric"
        }
      },
      "policies": {
        "team_transaction_allocations_all": {
          "name": "team_transaction_allocations_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "withCheck": "((EXISTS ( SELECT 1\n   FROM (transactions t\n     JOIN users_on_team u ON ((u.team_id = t.team_id)))\n  WHERE ((t.id = transaction_allocations.transaction_id) AND (u.user_id = auth.uid())))) OR (EXISTS ( SELECT 1\n   FROM (invoices i\n     JOIN users_on_team u ON ((u.team_id = i.team_id)))\n  WHERE ((i.id = transaction_allocations.invoice_id) AND (u.user_id = auth.uid())))))",
          "using": "((EXISTS ( SELECT 1\n   FROM (transactions t\n     JOIN users_on_team u ON ((u.team_id = t.team_id)))\n  WHERE ((t.id = transaction_allocations.transaction_id) AND (u.user_id = auth.uid())))) OR (EXISTS ( SELECT 1\n   FROM (invoices i\n     JOIN users_on_team u ON ((u.team_id = i.team_id)))\n  WHERE ((i.id = transaction_allocations.invoice_id) AND (u.user_id = auth.uid())))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.invoice_items": {
      "name": "invoice_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "order_item_id": {
          "name": "order_item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_invoice_items_invoice_id": {
          "name": "idx_invoice_items_invoice_id",
          "columns": [
            {
              "expression": "invoice_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoice_items_invoice_id_fkey": {
          "name": "invoice_items_invoice_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "invoices",
          "schemaTo": "public",
          "columnsFrom": ["invoice_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoice_items_order_item_id_fkey": {
          "name": "invoice_items_order_item_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "order_items",
          "schemaTo": "public",
          "columnsFrom": ["order_item_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "invoice_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "paid_at": {
          "name": "paid_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_url": {
          "name": "invoice_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'GHS'"
        },
        "vat_rate": {
          "name": "vat_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "vat_amount": {
          "name": "vat_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "exchange_rate": {
          "name": "exchange_rate",
          "type": "numeric(12, 6)",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "paid_amount": {
          "name": "paid_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "tax": {
          "name": "tax",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "discount": {
          "name": "discount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "sent_at": {
          "name": "sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_invoices_created_at": {
          "name": "idx_invoices_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_invoices_deleted_at": {
          "name": "idx_invoices_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_invoices_invoice_number": {
          "name": "idx_invoices_invoice_number",
          "columns": [
            {
              "expression": "invoice_number",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_invoices_order_id": {
          "name": "idx_invoices_order_id",
          "columns": [
            {
              "expression": "order_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(order_id IS NOT NULL)",
          "with": {}
        },
        "idx_invoices_sent_at": {
          "name": "idx_invoices_sent_at",
          "columns": [
            {
              "expression": "sent_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_invoices_status": {
          "name": "idx_invoices_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_invoices_team_id": {
          "name": "idx_invoices_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "idx_invoices_unpaid": {
          "name": "idx_invoices_unpaid",
          "columns": [
            {
              "expression": "due_date",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(status = ANY (ARRAY['pending'::invoice_status, 'overdue'::invoice_status]))",
          "with": {}
        },
        "invoices_team_id_idx": {
          "name": "invoices_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_order_id_fkey": {
          "name": "invoices_order_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "orders",
          "schemaTo": "public",
          "columnsFrom": ["order_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "invoices_team_id_fkey": {
          "name": "invoices_team_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invoices_invoice_number_key": {
          "columns": ["invoice_number"],
          "nullsNotDistinct": false,
          "name": "invoices_invoice_number_key"
        }
      },
      "checkConstraints": {
        "check_paid_status_requires_paid_at": {
          "name": "check_paid_status_requires_paid_at",
          "value": "(((status)::text = 'paid'::text) AND (paid_at IS NOT NULL)) OR ((status)::text <> 'paid'::text)"
        },
        "check_positive_invoice_amount": {
          "name": "check_positive_invoice_amount",
          "value": "amount > (0)::numeric"
        },
        "check_valid_invoice_status": {
          "name": "check_valid_invoice_status",
          "value": "(status)::text = ANY (ARRAY[('pending'::character varying)::text, ('sent'::character varying)::text, ('paid'::character varying)::text, ('overdue'::character varying)::text, ('cancelled'::character varying)::text])"
        }
      },
      "policies": {
        "Allow all operations for service role": {
          "name": "Allow all operations for service role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "true"
        },
        "invoices_select": {
          "name": "invoices_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.order_items": {
      "name": "order_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "order_items_order_id_idx": {
          "name": "order_items_order_id_idx",
          "columns": [
            {
              "expression": "order_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "order_items_order_id_fkey": {
          "name": "order_items_order_id_fkey",
          "tableFrom": "order_items",
          "tableTo": "orders",
          "schemaTo": "public",
          "columnsFrom": ["order_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "order_items_quantity_check": {
          "name": "order_items_quantity_check",
          "value": "quantity > 0"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.message_attachments": {
      "name": "message_attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "storage_path": {
          "name": "storage_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content_type": {
          "name": "content_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "checksum": {
          "name": "checksum",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_attachments_message_id_fkey": {
          "name": "message_attachments_message_id_fkey",
          "tableFrom": "message_attachments",
          "tableTo": "communication_messages",
          "schemaTo": "public",
          "columnsFrom": ["message_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "msg_attachments_rw": {
          "name": "msg_attachments_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM communication_messages m\n  WHERE ((m.id = message_attachments.message_id) AND (m.team_id = ANY (private.get_teams_for_authenticated_user())))))",
          "using": "(EXISTS ( SELECT 1\n   FROM communication_messages m\n  WHERE ((m.id = message_attachments.message_id) AND (m.team_id = ANY (private.get_teams_for_authenticated_user())))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.bank_statements": {
      "name": "bank_statements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "account_label": {
          "name": "account_label",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'GHS'"
        },
        "opening_balance": {
          "name": "opening_balance",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "closing_balance": {
          "name": "closing_balance",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "period_start": {
          "name": "period_start",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "period_end": {
          "name": "period_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "bank_statements_team_idx": {
          "name": "bank_statements_team_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "bank_statements_team_id_fkey": {
          "name": "bank_statements_team_id_fkey",
          "tableFrom": "bank_statements",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "bank_statements_rw": {
          "name": "bank_statements_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.communication_outbox": {
      "name": "communication_outbox",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "recipient": {
          "name": "recipient",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'queued'"
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_message_id": {
          "name": "client_message_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "media_path": {
          "name": "media_path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "media_type": {
          "name": "media_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "media_filename": {
          "name": "media_filename",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "caption": {
          "name": "caption",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_comm_outbox_status": {
          "name": "idx_comm_outbox_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "uq_outbox_team_client": {
          "name": "uq_outbox_team_client",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "client_message_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(client_message_id IS NOT NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "communication_outbox_account_id_fkey": {
          "name": "communication_outbox_account_id_fkey",
          "tableFrom": "communication_outbox",
          "tableTo": "communication_accounts",
          "schemaTo": "public",
          "columnsFrom": ["account_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "communication_outbox_team_id_fkey": {
          "name": "communication_outbox_team_id_fkey",
          "tableFrom": "communication_outbox",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "comm_outbox_rw": {
          "name": "comm_outbox_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.message_delivery": {
      "name": "message_delivery",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_error_code": {
          "name": "provider_error_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "retries": {
          "name": "retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_delivery_message_id_fkey": {
          "name": "message_delivery_message_id_fkey",
          "tableFrom": "message_delivery",
          "tableTo": "communication_messages",
          "schemaTo": "public",
          "columnsFrom": ["message_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "team_message_delivery_all": {
          "name": "team_message_delivery_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM (communication_messages m\n     JOIN users_on_team u ON ((u.team_id = m.team_id)))\n  WHERE ((m.id = message_delivery.message_id) AND (u.user_id = auth.uid()))))",
          "using": "(EXISTS ( SELECT 1\n   FROM (communication_messages m\n     JOIN users_on_team u ON ((u.team_id = m.team_id)))\n  WHERE ((m.id = message_delivery.message_id) AND (u.user_id = auth.uid()))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.users_on_team": {
      "name": "users_on_team",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "team_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'agent'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_on_team_team_id_idx": {
          "name": "users_on_team_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_on_team_user_id_idx": {
          "name": "users_on_team_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_on_team_team_id_fkey": {
          "name": "users_on_team_team_id_fkey",
          "tableFrom": "users_on_team",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_on_team_user_id_fkey": {
          "name": "users_on_team_user_id_fkey",
          "tableFrom": "users_on_team",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_on_team_user_id_team_id_key": {
          "columns": ["user_id", "team_id"],
          "nullsNotDistinct": false,
          "name": "users_on_team_user_id_team_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "users_on_team_rw": {
          "name": "users_on_team_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "((team_id = ANY (private.get_teams_for_authenticated_user())) OR (user_id = auth.uid()))",
          "using": "((team_id = ANY (private.get_teams_for_authenticated_user())) OR (user_id = auth.uid()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.user_invites": {
      "name": "user_invites",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "team_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'agent'"
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "encode(gen_random_bytes(16), 'hex'::text)"
        },
        "invited_by": {
          "name": "invited_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_invites_team_id_idx": {
          "name": "user_invites_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_invites_invited_by_fkey": {
          "name": "user_invites_invited_by_fkey",
          "tableFrom": "user_invites",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["invited_by"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "user_invites_team_id_fkey": {
          "name": "user_invites_team_id_fkey",
          "tableFrom": "user_invites",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_invites_team_id_email_key": {
          "columns": ["team_id", "email"],
          "nullsNotDistinct": false,
          "name": "user_invites_team_id_email_key"
        },
        "user_invites_code_key": {
          "columns": ["code"],
          "nullsNotDistinct": false,
          "name": "user_invites_code_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "user_invites_select_by_email": {
          "name": "user_invites_select_by_email",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "((auth.jwt() ->> 'email'::text) = email)"
        },
        "user_invites_team_rw": {
          "name": "user_invites_team_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.whatsapp_contacts": {
      "name": "whatsapp_contacts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "wa_id": {
          "name": "wa_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profile_pic_url": {
          "name": "profile_pic_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "whatsapp_contacts_team_idx": {
          "name": "whatsapp_contacts_team_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "whatsapp_contacts_team_id_fkey": {
          "name": "whatsapp_contacts_team_id_fkey",
          "tableFrom": "whatsapp_contacts",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "whatsapp_contacts_team_id_wa_id_key": {
          "columns": ["team_id", "wa_id"],
          "nullsNotDistinct": false,
          "name": "whatsapp_contacts_team_id_wa_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "team_whatsapp_contacts_all": {
          "name": "team_whatsapp_contacts_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "withCheck": "(team_id IN ( SELECT users_on_team.team_id\n   FROM users_on_team\n  WHERE (users_on_team.user_id = auth.uid())))",
          "using": "(team_id IN ( SELECT users_on_team.team_id\n   FROM users_on_team\n  WHERE (users_on_team.user_id = auth.uid())))"
        }
      },
      "isRLSEnabled": true
    },
    "public.instagram_contacts": {
      "name": "instagram_contacts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profile_pic_url": {
          "name": "profile_pic_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "instagram_contacts_team_idx": {
          "name": "instagram_contacts_team_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "instagram_contacts_team_id_fkey": {
          "name": "instagram_contacts_team_id_fkey",
          "tableFrom": "instagram_contacts",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "instagram_contacts_team_id_username_key": {
          "columns": ["team_id", "username"],
          "nullsNotDistinct": false,
          "name": "instagram_contacts_team_id_username_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "team_instagram_contacts_all": {
          "name": "team_instagram_contacts_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "withCheck": "(team_id IN ( SELECT users_on_team.team_id\n   FROM users_on_team\n  WHERE (users_on_team.user_id = auth.uid())))",
          "using": "(team_id IN ( SELECT users_on_team.team_id\n   FROM users_on_team\n  WHERE (users_on_team.user_id = auth.uid())))"
        }
      },
      "isRLSEnabled": true
    },
    "public.activities": {
      "name": "activities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "activities_team_idx": {
          "name": "activities_team_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "activities_team_id_fkey": {
          "name": "activities_team_id_fkey",
          "tableFrom": "activities",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "activities_user_id_fkey": {
          "name": "activities_user_id_fkey",
          "tableFrom": "activities",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "activities_rw": {
          "name": "activities_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.notification_settings": {
      "name": "notification_settings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "notification_type": {
          "name": "notification_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "channel": {
          "name": "channel",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "notification_settings_user_team_idx": {
          "name": "notification_settings_user_team_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notification_settings_team_id_fkey": {
          "name": "notification_settings_team_id_fkey",
          "tableFrom": "notification_settings",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notification_settings_user_id_fkey": {
          "name": "notification_settings_user_id_fkey",
          "tableFrom": "notification_settings",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "notification_settings_user_id_team_id_notification_type_cha_key": {
          "columns": ["user_id", "team_id", "notification_type", "channel"],
          "nullsNotDistinct": false,
          "name": "notification_settings_user_id_team_id_notification_type_cha_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "notif_rw": {
          "name": "notif_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "((user_id = auth.uid()) AND (team_id = ANY (private.get_teams_for_authenticated_user())))",
          "using": "((user_id = auth.uid()) AND (team_id = ANY (private.get_teams_for_authenticated_user())))"
        }
      },
      "isRLSEnabled": true
    },
    "public.bank_statement_lines": {
      "name": "bank_statement_lines",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "statement_id": {
          "name": "statement_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "balance": {
          "name": "balance",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "external_ref": {
          "name": "external_ref",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "bank_statement_lines_statement_idx": {
          "name": "bank_statement_lines_statement_idx",
          "columns": [
            {
              "expression": "statement_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "bank_statement_lines_statement_id_fkey": {
          "name": "bank_statement_lines_statement_id_fkey",
          "tableFrom": "bank_statement_lines",
          "tableTo": "bank_statements",
          "schemaTo": "public",
          "columnsFrom": ["statement_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "bank_statement_lines_rw": {
          "name": "bank_statement_lines_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM bank_statements s\n  WHERE ((s.id = bank_statement_lines.statement_id) AND (s.team_id = ANY (private.get_teams_for_authenticated_user())))))",
          "using": "(EXISTS ( SELECT 1\n   FROM bank_statements s\n  WHERE ((s.id = bank_statement_lines.statement_id) AND (s.team_id = ANY (private.get_teams_for_authenticated_user())))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.bank_statement_allocations": {
      "name": "bank_statement_allocations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "line_id": {
          "name": "line_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bank_statement_allocations_line_id_fkey": {
          "name": "bank_statement_allocations_line_id_fkey",
          "tableFrom": "bank_statement_allocations",
          "tableTo": "bank_statement_lines",
          "schemaTo": "public",
          "columnsFrom": ["line_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "bank_statement_allocations_transaction_id_fkey": {
          "name": "bank_statement_allocations_transaction_id_fkey",
          "tableFrom": "bank_statement_allocations",
          "tableTo": "transactions",
          "schemaTo": "public",
          "columnsFrom": ["transaction_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "bank_statement_allocations_line_id_transaction_id_key": {
          "columns": ["line_id", "transaction_id"],
          "nullsNotDistinct": false,
          "name": "bank_statement_allocations_line_id_transaction_id_key"
        }
      },
      "checkConstraints": {
        "bank_statement_allocations_amount_check": {
          "name": "bank_statement_allocations_amount_check",
          "value": "amount > (0)::numeric"
        }
      },
      "policies": {
        "bank_statement_allocations_rw": {
          "name": "bank_statement_allocations_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM (bank_statement_lines l\n     JOIN bank_statements s ON ((s.id = l.statement_id)))\n  WHERE ((l.id = bank_statement_allocations.line_id) AND (s.team_id = ANY (private.get_teams_for_authenticated_user())))))",
          "using": "(EXISTS ( SELECT 1\n   FROM (bank_statement_lines l\n     JOIN bank_statements s ON ((s.id = l.statement_id)))\n  WHERE ((l.id = bank_statement_allocations.line_id) AND (s.team_id = ANY (private.get_teams_for_authenticated_user())))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.appointments": {
      "name": "appointments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "staff_user_id": {
          "name": "staff_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "start_at": {
          "name": "start_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "end_at": {
          "name": "end_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "appointment_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'scheduled'"
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reminder_at": {
          "name": "reminder_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "appointments_team_start_idx": {
          "name": "appointments_team_start_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "start_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "appointments_client_id_fkey": {
          "name": "appointments_client_id_fkey",
          "tableFrom": "appointments",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["client_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "appointments_staff_user_id_fkey": {
          "name": "appointments_staff_user_id_fkey",
          "tableFrom": "appointments",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["staff_user_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "appointments_team_id_fkey": {
          "name": "appointments_team_id_fkey",
          "tableFrom": "appointments",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "appointments_rw": {
          "name": "appointments_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.communication_templates": {
      "name": "communication_templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "locale": {
          "name": "locale",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "body": {
          "name": "body",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "variables": {
          "name": "variables",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "communication_templates_team_idx": {
          "name": "communication_templates_team_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "communication_templates_team_id_fkey": {
          "name": "communication_templates_team_id_fkey",
          "tableFrom": "communication_templates",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "communication_templates_team_id_provider_name_key": {
          "columns": ["team_id", "provider", "name"],
          "nullsNotDistinct": false,
          "name": "communication_templates_team_id_provider_name_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "comm_templates_rw": {
          "name": "comm_templates_rw",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(team_id = ANY (private.get_teams_for_authenticated_user()))",
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.documents": {
      "name": "documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path_tokens": {
          "name": "path_tokens",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"RAY\"}'"
        },
        "processing_status": {
          "name": "processing_status",
          "type": "varchar(32)",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_by": {
          "name": "uploaded_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_documents_client_id": {
          "name": "idx_documents_client_id",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_created_at": {
          "name": "idx_documents_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_deleted_at": {
          "name": "idx_documents_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_invoice_id": {
          "name": "idx_documents_invoice_id",
          "columns": [
            {
              "expression": "invoice_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_name": {
          "name": "idx_documents_name",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_order_id": {
          "name": "idx_documents_order_id",
          "columns": [
            {
              "expression": "order_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_path": {
          "name": "idx_documents_path",
          "columns": [
            {
              "expression": "path_tokens",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_tags": {
          "name": "idx_documents_tags",
          "columns": [
            {
              "expression": "tags",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_team_id": {
          "name": "idx_documents_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "documents_client_id_clients_id_fk": {
          "name": "documents_client_id_clients_id_fk",
          "tableFrom": "documents",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["client_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "documents_invoice_id_invoices_id_fk": {
          "name": "documents_invoice_id_invoices_id_fk",
          "tableFrom": "documents",
          "tableTo": "invoices",
          "schemaTo": "public",
          "columnsFrom": ["invoice_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "documents_order_id_orders_id_fk": {
          "name": "documents_order_id_orders_id_fk",
          "tableFrom": "documents",
          "tableTo": "orders",
          "schemaTo": "public",
          "columnsFrom": ["order_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "documents_team_id_teams_id_fk": {
          "name": "documents_team_id_teams_id_fk",
          "tableFrom": "documents",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "documents_uploaded_by_users_id_fk": {
          "name": "documents_uploaded_by_users_id_fk",
          "tableFrom": "documents",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["uploaded_by"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.transaction_categories": {
      "name": "transaction_categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parent_id": {
          "name": "parent_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "system": {
          "name": "system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_transaction_categories_parent_id": {
          "name": "idx_transaction_categories_parent_id",
          "columns": [
            {
              "expression": "parent_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(parent_id IS NOT NULL)",
          "with": {}
        },
        "idx_transaction_categories_slug": {
          "name": "idx_transaction_categories_slug",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_categories_system": {
          "name": "idx_transaction_categories_system",
          "columns": [
            {
              "expression": "system",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(system = true)",
          "with": {}
        },
        "idx_transaction_categories_team_id": {
          "name": "idx_transaction_categories_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "transaction_categories_parent_id_fkey": {
          "name": "transaction_categories_parent_id_fkey",
          "tableFrom": "transaction_categories",
          "tableTo": "transaction_categories",
          "schemaTo": "public",
          "columnsFrom": ["parent_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "transaction_categories_team_id_fkey": {
          "name": "transaction_categories_team_id_fkey",
          "tableFrom": "transaction_categories",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_category_slug_per_team": {
          "columns": ["team_id", "slug"],
          "nullsNotDistinct": false,
          "name": "unique_category_slug_per_team"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.tags": {
      "name": "tags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_tags_name": {
          "name": "idx_tags_name",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_tags_team_id": {
          "name": "idx_tags_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tags_team_id_fkey": {
          "name": "tags_team_id_fkey",
          "tableFrom": "tags",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_tag_name_per_team": {
          "columns": ["team_id", "name"],
          "nullsNotDistinct": false,
          "name": "unique_tag_name_per_team"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.transaction_tags": {
      "name": "transaction_tags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tag_id": {
          "name": "tag_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_transaction_tags_tag_id": {
          "name": "idx_transaction_tags_tag_id",
          "columns": [
            {
              "expression": "tag_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_tags_team_id": {
          "name": "idx_transaction_tags_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_tags_team_transaction_tag": {
          "name": "idx_transaction_tags_team_transaction_tag",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "transaction_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tag_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_tags_transaction_id": {
          "name": "idx_transaction_tags_transaction_id",
          "columns": [
            {
              "expression": "transaction_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "transaction_tags_tag_id_fkey": {
          "name": "transaction_tags_tag_id_fkey",
          "tableFrom": "transaction_tags",
          "tableTo": "tags",
          "schemaTo": "public",
          "columnsFrom": ["tag_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_tags_team_id_fkey": {
          "name": "transaction_tags_team_id_fkey",
          "tableFrom": "transaction_tags",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_tags_transaction_id_fkey": {
          "name": "transaction_tags_transaction_id_fkey",
          "tableFrom": "transaction_tags",
          "tableTo": "transactions",
          "schemaTo": "public",
          "columnsFrom": ["transaction_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_transaction_tag": {
          "columns": ["transaction_id", "tag_id"],
          "nullsNotDistinct": false,
          "name": "unique_transaction_tag"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.transactions": {
      "name": "transactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_number": {
          "name": "transaction_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "transaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'GHS'"
        },
        "payment_method": {
          "name": "payment_method",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_reference": {
          "name": "payment_reference",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_date": {
          "name": "transaction_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "transaction_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'completed'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "internal_id": {
          "name": "internal_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "balance": {
          "name": "balance",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "base_amount": {
          "name": "base_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "base_currency": {
          "name": "base_currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        },
        "category_slug": {
          "name": "category_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_id": {
          "name": "assigned_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "counterparty_name": {
          "name": "counterparty_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "merchant_name": {
          "name": "merchant_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manual": {
          "name": "manual",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "recurring": {
          "name": "recurring",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "frequency": {
          "name": "frequency",
          "type": "transaction_frequency",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "enrichment_completed": {
          "name": "enrichment_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "fts_vector": {
          "name": "fts_vector",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "to_tsvector('english'::regconfig, ((((((((COALESCE(name, ''::text) || ' '::text) || COALESCE(description, ''::text)) || ' '::text) || COALESCE(counterparty_name, ''::text)) || ' '::text) || COALESCE(merchant_name, ''::text)) || ' '::text) || (COALESCE(category, ''::character varying))::text))",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "idx_transactions_assigned_id": {
          "name": "idx_transactions_assigned_id",
          "columns": [
            {
              "expression": "assigned_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(assigned_id IS NOT NULL)",
          "with": {}
        },
        "idx_transactions_category_slug": {
          "name": "idx_transactions_category_slug",
          "columns": [
            {
              "expression": "category_slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(category_slug IS NOT NULL)",
          "with": {}
        },
        "idx_transactions_client_id": {
          "name": "idx_transactions_client_id",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_date": {
          "name": "idx_transactions_date",
          "columns": [
            {
              "expression": "transaction_date",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_deleted_at": {
          "name": "idx_transactions_deleted_at",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_description_trigram": {
          "name": "idx_transactions_description_trigram",
          "columns": [
            {
              "expression": "description",
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_transactions_fts": {
          "name": "idx_transactions_fts",
          "columns": [
            {
              "expression": "fts_vector",
              "asc": true,
              "nulls": "last",
              "opclass": "tsvector_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_transactions_internal_id": {
          "name": "idx_transactions_internal_id",
          "columns": [
            {
              "expression": "internal_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_invoice_id": {
          "name": "idx_transactions_invoice_id",
          "columns": [
            {
              "expression": "invoice_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_name_trigram": {
          "name": "idx_transactions_name_trigram",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_transactions_order_id": {
          "name": "idx_transactions_order_id",
          "columns": [
            {
              "expression": "order_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_status": {
          "name": "idx_transactions_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_team_date": {
          "name": "idx_transactions_team_date",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "date",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_team_deleted_date": {
          "name": "idx_transactions_team_deleted_date",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "transaction_date",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_team_id": {
          "name": "idx_transactions_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_team_pagination": {
          "name": "idx_transactions_team_pagination",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "date",
              "asc": false,
              "nulls": "first",
              "opclass": "date_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": false,
              "nulls": "first",
              "opclass": "date_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "idx_transactions_team_status_date": {
          "name": "idx_transactions_team_status_date",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops",
              "isExpression": false
            },
            {
              "expression": "date",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_team_type_date": {
          "name": "idx_transactions_team_type_date",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "date",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_transaction_date": {
          "name": "idx_transactions_transaction_date",
          "columns": [
            {
              "expression": "transaction_date",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transactions_type": {
          "name": "idx_transactions_type",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "transactions_team_id_idx": {
          "name": "transactions_team_id_idx",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fk_transactions_assigned_user": {
          "name": "fk_transactions_assigned_user",
          "tableFrom": "transactions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["assigned_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "fk_transactions_category": {
          "name": "fk_transactions_category",
          "tableFrom": "transactions",
          "tableTo": "transaction_categories",
          "schemaTo": "public",
          "columnsFrom": ["team_id", "category_slug"],
          "columnsTo": ["team_id", "slug"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "transactions_client_id_fkey": {
          "name": "transactions_client_id_fkey",
          "tableFrom": "transactions",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": ["client_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "transactions_invoice_id_fkey": {
          "name": "transactions_invoice_id_fkey",
          "tableFrom": "transactions",
          "tableTo": "invoices",
          "schemaTo": "public",
          "columnsFrom": ["invoice_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "transactions_order_id_fkey": {
          "name": "transactions_order_id_fkey",
          "tableFrom": "transactions",
          "tableTo": "orders",
          "schemaTo": "public",
          "columnsFrom": ["order_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "transactions_team_id_fkey": {
          "name": "transactions_team_id_fkey",
          "tableFrom": "transactions",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "transactions_transaction_number_key": {
          "columns": ["transaction_number"],
          "nullsNotDistinct": false,
          "name": "transactions_transaction_number_key"
        },
        "transactions_internal_id_unique": {
          "columns": ["internal_id"],
          "nullsNotDistinct": false,
          "name": "transactions_internal_id_unique"
        }
      },
      "checkConstraints": {
        "check_positive_transaction_amount": {
          "name": "check_positive_transaction_amount",
          "value": "amount > (0)::numeric"
        },
        "check_valid_transaction_status": {
          "name": "check_valid_transaction_status",
          "value": "(status)::text = ANY (ARRAY[('pending'::character varying)::text, ('completed'::character varying)::text, ('failed'::character varying)::text, ('cancelled'::character varying)::text])"
        },
        "check_valid_transaction_type": {
          "name": "check_valid_transaction_type",
          "value": "(type)::text = ANY (ARRAY[('payment'::character varying)::text, ('expense'::character varying)::text, ('refund'::character varying)::text, ('adjustment'::character varying)::text])"
        }
      },
      "policies": {
        "transactions_select": {
          "name": "transactions_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(team_id = ANY (private.get_teams_for_authenticated_user()))"
        }
      },
      "isRLSEnabled": true
    },
    "public.transaction_attachments": {
      "name": "transaction_attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "numeric(20, 0)",
          "primaryKey": false,
          "notNull": false
        },
        "checksum": {
          "name": "checksum",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_by": {
          "name": "uploaded_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_transaction_attachments_checksum": {
          "name": "idx_transaction_attachments_checksum",
          "columns": [
            {
              "expression": "checksum",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(checksum IS NOT NULL)",
          "with": {}
        },
        "idx_transaction_attachments_team_id": {
          "name": "idx_transaction_attachments_team_id",
          "columns": [
            {
              "expression": "team_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_attachments_transaction_id": {
          "name": "idx_transaction_attachments_transaction_id",
          "columns": [
            {
              "expression": "transaction_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_transaction_attachments_type": {
          "name": "idx_transaction_attachments_type",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(type IS NOT NULL)",
          "with": {}
        },
        "idx_transaction_attachments_uploaded_by": {
          "name": "idx_transaction_attachments_uploaded_by",
          "columns": [
            {
              "expression": "uploaded_by",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(uploaded_by IS NOT NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "transaction_attachments_team_id_fkey": {
          "name": "transaction_attachments_team_id_fkey",
          "tableFrom": "transaction_attachments",
          "tableTo": "teams",
          "schemaTo": "public",
          "columnsFrom": ["team_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_attachments_transaction_id_fkey": {
          "name": "transaction_attachments_transaction_id_fkey",
          "tableFrom": "transaction_attachments",
          "tableTo": "transactions",
          "schemaTo": "public",
          "columnsFrom": ["transaction_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_attachments_uploaded_by_fkey": {
          "name": "transaction_attachments_uploaded_by_fkey",
          "tableFrom": "transaction_attachments",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["uploaded_by"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "check_attachment_path_not_empty": {
          "name": "check_attachment_path_not_empty",
          "value": "array_length(path, 1) > 0"
        },
        "check_attachment_size_positive": {
          "name": "check_attachment_size_positive",
          "value": "(size IS NULL) OR (size > (0)::numeric)"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.appointment_status": {
      "name": "appointment_status",
      "values": ["scheduled", "completed", "cancelled", "no_show"],
      "schema": "public"
    },
    "public.comm_message_status": {
      "name": "comm_message_status",
      "values": ["queued", "sent", "delivered", "read", "failed"],
      "schema": "public"
    },
    "public.invoice_status": {
      "name": "invoice_status",
      "values": ["pending", "sent", "paid", "overdue", "cancelled"],
      "schema": "public"
    },
    "public.order_status": {
      "name": "order_status",
      "values": ["generated", "in_progress", "completed", "cancelled"],
      "schema": "public"
    },
    "public.team_role": {
      "name": "team_role",
      "values": ["owner", "admin", "agent", "viewer"],
      "schema": "public"
    },
    "public.transaction_frequency": {
      "name": "transaction_frequency",
      "values": ["weekly", "biweekly", "monthly", "semi_monthly", "annually", "irregular"],
      "schema": "public"
    },
    "public.transaction_method": {
      "name": "transaction_method",
      "values": ["cash", "bank_transfer", "mobile_money", "card", "cheque", "other"],
      "schema": "public"
    },
    "public.transaction_status": {
      "name": "transaction_status",
      "values": ["pending", "completed", "failed", "cancelled"],
      "schema": "public"
    },
    "public.transaction_type": {
      "name": "transaction_type",
      "values": ["payment", "expense", "refund", "adjustment"],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.transactions_income": {
      "name": "transactions_income",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_number": {
          "name": "transaction_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "transaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_method": {
          "name": "payment_method",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_reference": {
          "name": "payment_reference",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_date": {
          "name": "transaction_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "transaction_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_name": {
          "name": "client_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "order_number": {
          "name": "order_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT t.id, t.order_id, t.invoice_id, t.client_id, t.transaction_number, t.type, t.category, t.amount, t.currency, t.payment_method, t.payment_reference, t.description, t.notes, t.transaction_date, t.due_date, t.status, t.created_at, t.updated_at, t.deleted_at, t.team_id, c.name AS client_name, o.order_number, i.invoice_number FROM transactions t LEFT JOIN clients c ON t.client_id = c.id LEFT JOIN orders o ON t.order_id = o.id LEFT JOIN invoices i ON t.invoice_id = i.id WHERE t.type = 'payment'::transaction_type AND t.status = 'completed'::transaction_status AND t.deleted_at IS NULL",
      "materialized": false
    },
    "public.financial_summary": {
      "name": "financial_summary",
      "schema": "public",
      "columns": {
        "month": {
          "name": "month",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "total_income": {
          "name": "total_income",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "total_expenses": {
          "name": "total_expenses",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "net_profit": {
          "name": "net_profit",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT date_trunc('month'::text, transaction_date) AS month, sum( CASE WHEN type = 'payment'::transaction_type AND status = 'completed'::transaction_status THEN amount ELSE 0::numeric END) AS total_income, sum( CASE WHEN type = 'expense'::transaction_type AND status = 'completed'::transaction_status THEN amount ELSE 0::numeric END) AS total_expenses, sum( CASE WHEN type = 'payment'::transaction_type AND status = 'completed'::transaction_status THEN amount WHEN type = 'expense'::transaction_type AND status = 'completed'::transaction_status THEN - amount ELSE 0::numeric END) AS net_profit FROM transactions WHERE deleted_at IS NULL GROUP BY (date_trunc('month'::text, transaction_date)) ORDER BY (date_trunc('month'::text, transaction_date)) DESC",
      "materialized": false
    },
    "public.transactions_expenses": {
      "name": "transactions_expenses",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "order_id": {
          "name": "order_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_number": {
          "name": "transaction_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "transaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_method": {
          "name": "payment_method",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_reference": {
          "name": "payment_reference",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_date": {
          "name": "transaction_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "transaction_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "team_id": {
          "name": "team_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "client_name": {
          "name": "client_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT t.id, t.order_id, t.invoice_id, t.client_id, t.transaction_number, t.type, t.category, t.amount, t.currency, t.payment_method, t.payment_reference, t.description, t.notes, t.transaction_date, t.due_date, t.status, t.created_at, t.updated_at, t.deleted_at, t.team_id, c.name AS client_name FROM transactions t LEFT JOIN clients c ON t.client_id = c.id WHERE t.type = 'expense'::transaction_type AND t.status = 'completed'::transaction_status AND t.deleted_at IS NULL",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "measurements": {
        "columns": {
          "tags": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      },
      "documents": {
        "columns": {
          "path_tokens": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          },
          "tags": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      },
      "transaction_attachments": {
        "columns": {
          "path": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}
